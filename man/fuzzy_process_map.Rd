% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzy_miner.R
\name{fuzzy_process_map}
\alias{fuzzy_process_map}
\title{Fuzzy Process Map}
\usage{
fuzzy_process_map(eventlog, type = frequency("absolute"), render = T,
  preserve_threshold = 0.5, ratio_threshold = 0.4, utility_ratio = 0.5,
  edge_cutoff = 0.2, node_cutoff = 0)
}
\arguments{
\item{eventlog}{eventlog, The event log object for which to create a process
map}

\item{type}{A process map type, which can be created with the functions
\code{frequency} and \code{performance}. The first type focusses on the
frequency aspect of a process, while the second one focusses on processing
time.}

\item{render}{logical, whether the map should be rendered immediately
(default), or rather an object of type dgr_graph should be returned.}

\item{preserve_threshold}{number between 0 and 1, the preservation threshold
to use for conflict resolution between two nodes.  A higher value preserves
more 'length 2 loops'.}

\item{ratio_threshold}{number between 0 and 1, the ratio threshold to use for
conflict resolution between two nodes.  A higher value results in fewer
edges being preserved.}

\item{utility_ratio}{number between 0 and 1, when edge filtering is done
the weighting given to significance is the \code{utility_ratio} and the
weighting for correlation is \code{1 - utility_ratio}.  A higher value
places more weight on the significance of the edge.}

\item{edge_cutoff}{number between 0 and 1, this parameter determines the
aggressiveness of the edge filtering algorithm.  A higher value results in
fewer edges.}

\item{node_cutoff}{number between 0 and 1, this parameter determines the
aggressiveness of the node filtering algorithm.  A higher value results in
fewer nodes.}
}
\value{
plots a proccess map if render = TRUE, otherwise returns a dgr_graph
  object
}
\description{
A function for creating a fuzzy miner process map of an event
 log. FUNCTION IS NOT WORKING YET!!!!!

 The \code{fuzzy_process_map} function provides an alternative mapping tool
 to \code{proccess_map} by automatically filtering for only significant
 activities and process flows in the process map.  This allows the user to
 avoid "process map spaghetti" where visualisations of process maps can
 become incomprehensible when mapping very unstructured event logs.
}
\details{
This function is based on the 'Fuzzy Mining' approach developed by
 Christian W. Gunther and Wil M.P. van der Aalst, which they implemented in
 ProM.
}
\examples{
\dontrun{
library(eventdataR)
data(patients)
fuzzy_process_map(patients)
}
}
\references{
Fuzzy mining - adaptive process simplification based on
  multi-perspective metrics,
  https://pure.tue.nl/ws/files/2094639/Metis210572.pdf
}
